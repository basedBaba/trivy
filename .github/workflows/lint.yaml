name: Keploy TestGPT Workflow

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  keploy-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up environment variables
        run: echo "WORKDIR=${{ github.workspace }}" >> $GITHUB_ENV

      - name: Detect languages
        id: language-detection
        shell: bash
        run: |
          declare -A extensions=(
            ["go"]="go"
            ["js"]="javascript"
            ["ts"]="javascript" 
            ["py"]="python"
            ["java"]="java"
          )

          LANGUAGES=""
          for file in $(git ls-files); do
            ext="${file##*.}"
            if [[ -n "${extensions[$ext]}" ]]; then
              LANGUAGES+="${extensions[$ext]} "
            fi
          done

          UNIQUE_LANGS=$(echo "$LANGUAGES" | tr ' ' '\n' | sort -u | tr '\n' ' ')
          echo "languages=$UNIQUE_LANGS" >> $GITHUB_ENV

      - name: Install analysis tools
        shell: bash
        run: |
          for lang in ${{ env.languages }}; do
            case "$lang" in
              go)
                curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s
                go install github.com/securego/gosec/v2/cmd/gosec@latest
                ;;
              javascript)
                npm install -g eslint
                ;;
              python)
                pip install flake8 bandit
                ;;
            esac
          done

      - name: Run Code Analysis
        shell: bash
        run: |
          mkdir -p analysis-reports
          cd $WORKDIR

          for lang in ${{ env.languages }}; do
            case "$lang" in
              go)
                golangci-lint run --out-format=github-actions ./... > analysis-reports/go-lint.txt
                gosec ./... > analysis-reports/go-security.txt
                ;;
              javascript)
                eslint . --format junit -o analysis-reports/js-lint.xml
                ;;
              python)
                flake8 . --output-file=analysis-reports/py-lint.txt
                bandit -r . -f txt -o analysis-reports/py-security.txt
                ;;
            esac
          done

      - name: Integrate Reports
        shell: bash
        run: |
          WORKDIR=${{ github.workspace }}
          FINAL_REPORT="$WORKDIR/analysis-reports/final-report.txt"

          echo "## ðŸ“Š Consolidated TestGPT Analysis Report" > $FINAL_REPORT
          
          for report in $WORKDIR/analysis-reports/*; do
            if [ -s "$report" ]; then
              echo -e "\n### $(basename $report)\n" >> $FINAL_REPORT
              cat "$report" >> $FINAL_REPORT
            fi
          done

          echo "FINAL_REPORT_CONTENT<<EOF" >> $GITHUB_ENV
          cat $FINAL_REPORT >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Comment on PR with Keploy & Analysis Report
        if: success()
        uses: actions/github-script@v6
        env:
          KEPLOY_REPORT: ${{ env.KEPLOY_REPORT }}
          FINAL_REPORT_CONTENT: ${{ env.FINAL_REPORT_CONTENT }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const keployReport = process.env.KEPLOY_REPORT || "No test results available.";
            const analysisReport = process.env.FINAL_REPORT_CONTENT || "No analysis report available.";

            const summary = `## ðŸ“Š TestGPT Analysis Report\n\n**ðŸ§ª Keploy Test Summary:**\n${keployReport}\n\n**ðŸ“œ Code Analysis Reports:**\n${analysisReport}`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });
